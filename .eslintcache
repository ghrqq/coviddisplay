[{"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\index.js":"1","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\reportWebVitals.js":"2","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\App.js":"3","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\About.jsx":"4","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\Contact.jsx":"5","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\Navigation.jsx":"6","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\tools\\CountryNamer.js":"7","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\Home.jsx":"8","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\CountryCard.jsx":"9","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\CountrySelector.jsx":"10","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\GlobalData.jsx":"11","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\tools\\useWindowDimensions.js":"12","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\CountryDataTable.jsx":"13","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\Compare.jsx":"14","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\CompareCountries.jsx":"15"},{"size":543,"mtime":1607799307230,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":3737,"mtime":1610367364431,"results":"19","hashOfConfig":"17"},{"size":110,"mtime":1607775706720,"results":"20","hashOfConfig":"17"},{"size":116,"mtime":1607775716248,"results":"21","hashOfConfig":"17"},{"size":387,"mtime":1607819765172,"results":"22","hashOfConfig":"17"},{"size":713,"mtime":1610206379956,"results":"23","hashOfConfig":"17"},{"size":3157,"mtime":1610405074386,"results":"24","hashOfConfig":"17"},{"size":3728,"mtime":1610367414931,"results":"25","hashOfConfig":"17"},{"size":927,"mtime":1610208142704,"results":"26","hashOfConfig":"17"},{"size":1323,"mtime":1610148718178,"results":"27","hashOfConfig":"17"},{"size":659,"mtime":1610151021039,"results":"28","hashOfConfig":"17"},{"size":1312,"mtime":1610212917470,"results":"29","hashOfConfig":"17"},{"size":860,"mtime":1610236685374,"results":"30","hashOfConfig":"17"},{"size":2316,"mtime":1610493817727,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"suklur",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\index.js",[],["69","70"],"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\reportWebVitals.js",[],"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\App.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85"],"import \"./App.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nimport { Router, navigate } from \"@reach/router\";\nimport Contact from \"./pages/Contact\";\nimport About from \"./pages/About\";\nimport Navigation from \"./pages/Navigation\";\nimport Home from \"./pages/Home\";\nimport Compare from \"./pages/Compare\";\n\nexport const CountryContext = React.createContext([]);\nexport const InitialCountryContext = React.createContext([]);\nexport const GlobalRate = React.createContext([]);\nexport const CompareContext = React.createContext([]);\n\nfunction App() {\n  const [lang, setlang] = useState({});\n\n  // Data loading indicators\n  const [loading, setloading] = useState(false);\n  const [isRelatedLoading, setisRelatedLoading] = useState(false);\n  const [isSelectedLoading, setisSelectedLoading] = useState(false);\n\n  // Data states\n  const [details, setdetails] = useState({});\n  const [selectedCountry, setselectedCountry] = useState(\"\");\n  const [relatedCountry, setrelatedCountry] = useState(\"\");\n\n  // Const Global\n\n  const [globalRates, setglobalRates] = useState({});\n  const [globalData, setglobalData] = useState({});\n  const [countries, setcountries] = useState([]);\n  const [apiMessage, setapiMessage] = useState(\"\");\n\n  // Compare State\n\n  const language = window.navigator.userLanguage || window.navigator.language;\n  // const getUserGeolocationDetailss = () => {\n  //   setisSelectedLoading(true);\n  //   fetch(\n  //     \"https://geolocation-db.com/json/09ba3820-0f88-11eb-9ba6-e1dd7dece2b8\"\n  //   )\n  //     .then((response) => response.json())\n  //     .then((data) => setdetails(data));\n  //   setselectedCountry(details.country_name);\n\n  //   setisSelectedLoading(false);\n  // };\n\n  const compRef = useRef([]);\n\n  const compareNavigator = (country) => {\n    if (compRef.current.length < 2) {\n      compRef.current = [...compRef.current, country];\n    }\n    if (compRef.current.length === 2) {\n      navigate(`/compare/${compRef.current[0]}/${compRef.current[1]}`);\n      window.scrollTo(0, 0);\n      compRef.current = [];\n    }\n  };\n\n  const removeFromCompare = (country) => {\n    compRef.current = [];\n  };\n\n  useEffect(() => {\n    setloading(true);\n    async function getData() {\n      const result = await (\n        await fetch(\"https://api.covid19api.com/summary\", {\n          method: \"GET\",\n          headers: {\n            \"X-Access-Token\": \"5cf9dfd5-3449-485e-b5ae-70a60e997864\",\n          },\n        })\n      ).json();\n      setglobalData(result.Global);\n      let rates = {\n        GlobalDeathRate: result.Global.NewDeaths / result.Global.TotalDeaths,\n        GlobalCaseRate:\n          result.Global.NewConfirmed / result.Global.TotalConfirmed,\n        GlobalRecoveryRate:\n          result.Global.NewRecovered / result.Global.TotalRecovered,\n      };\n      setglobalRates(rates);\n      setcountries(result.Countries);\n      setapiMessage(result.Message);\n      setloading(false);\n    }\n    getData();\n  }, []);\n  if (apiMessage !== \"\")\n    return (\n      <h2>\n        Server is currently processing new data. Please try again in 5 minutes.\n      </h2>\n    );\n  return (\n    <CountryContext.Provider value={[countries, setcountries]}>\n      <GlobalRate.Provider value={[globalRates, setglobalRates]}>\n        <CompareContext.Provider value={[compareNavigator, removeFromCompare]}>\n          <div className=\"app\">\n            <Navigation />\n            <Router id=\"router\">\n              <Home path=\"/\" />\n              <Compare path=\"/compare/:country/:country2\" />\n              <About path=\"about\" />\n              <Contact path=\"contact\" />\n            </Router>\n          </div>\n        </CompareContext.Provider>\n      </GlobalRate.Provider>\n    </CountryContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\About.jsx",[],"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\Contact.jsx",[],"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\Navigation.jsx",[],"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\tools\\CountryNamer.js",[],"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\Home.jsx",["86","87","88","89","90","91","92"],"import React, { useState, useContext, useCallback, useEffect } from \"react\";\r\nimport { CountryContext } from \"../App\";\r\nimport CountryCard from \"../components/CountryCard\";\r\nimport GlobalData from \"../components/GlobalData\";\r\nimport useWindowDimensions from \"../tools/useWindowDimensions\";\r\nimport { countryNamer } from \"../tools/CountryNamer\";\r\n\r\nexport default function Home(props) {\r\n  //Get dimensions for country adder\r\n  const [countries] = useContext(CountryContext);\r\n  const { width } = useWindowDimensions();\r\n\r\n  //Maximum renderable country (on a single line).\r\n  const [availableSpace, setAvailableSpace] = useState(Math.floor(width / 330));\r\n\r\n  const [count, setCount] = useState(2);\r\n\r\n  const [isSelectedLoading, setisSelectedLoading] = useState(\"\");\r\n  const [lang, setlang] = useState(\"\");\r\n  const [initial, setinitial] = useState([]);\r\n\r\n  const [details, setdetails] = useState({});\r\n\r\n  // const languageSetter = async () => {\r\n  //   setisRelatedLoading(true);\r\n\r\n  //   setrelatedCountry(languageName[0]);\r\n  //   setinitial([...initial, languageName[0]]);\r\n\r\n  //   setisRelatedLoading(false);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setisSelectedLoading(true);\r\n    async function getUserGeolocationDetails() {\r\n      let tempArr = [];\r\n      const langu = window.navigator.userLanguage || window.navigator.language;\r\n      console.log(\"langguuuu: \", langu);\r\n      const languageName =\r\n        langu.length > 0\r\n          ? countryNamer(langu.slice(3, 5).toUpperCase(), \"name\")\r\n          : countryNamer(langu.toUpperCase(), \"name\");\r\n\r\n      setlang({ ab: langu, name: languageName[0] });\r\n\r\n      tempArr.push(langu.slice(3, 5).toUpperCase());\r\n      console.log(tempArr);\r\n\r\n      setinitial(tempArr);\r\n\r\n      const result = await (\r\n        await fetch(\r\n          \"https://geolocation-db.com/json/09ba3820-0f88-11eb-9ba6-e1dd7dece2b8\"\r\n        )\r\n      ).json();\r\n\r\n      if (result) {\r\n        setdetails(result);\r\n\r\n        tempArr.push(result.country_code);\r\n      } else {\r\n        tempArr.push(\"DE\");\r\n      }\r\n      setinitial(tempArr);\r\n\r\n      setisSelectedLoading(false);\r\n    }\r\n\r\n    getUserGeolocationDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home\">\r\n        <GlobalData />\r\n      </div>\r\n\r\n      <div className=\"country-card-container\">\r\n        {initial.length > 0 ? (\r\n          initial.map((item) => {\r\n            return (\r\n              <div className=\"wrapper\">\r\n                <CountryCard key={initial.indexOf(item)} country={item} />\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>Loading...</div>\r\n        )}\r\n        {initial.length <= availableSpace ? (\r\n          <div className=\"wrapper country-adder\">\r\n            <div\r\n              className=\"country-card\"\r\n              onClick={() =>\r\n                setinitial([\r\n                  ...initial,\r\n                  countries[Math.floor(Math.random() * 100)][\"CountryCode\"],\r\n                ])\r\n              }\r\n            >\r\n              <div className=\"country-adder-text\">Add...</div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\CountryCard.jsx",["93","94","95","96"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { CountryContext, GlobalRate, CompareContext } from \"../App\";\r\nimport CountrySelector from \"./CountrySelector\";\r\nimport img from \"./img/az/vector.svg\";\r\nimport preloader from \"./preloader.gif\";\r\nimport { countryNamer } from \"../tools/CountryNamer\";\r\nimport CountryDataTable from \"./CountryDataTable\";\r\n\r\nexport default function CountryCard({ country }) {\r\n  const [selected, setselected] = useState(country);\r\n  const [countries] = useContext(CountryContext);\r\n  const [rates] = useContext(GlobalRate);\r\n  const [compareHandler, removeFromCompare] = useContext(CompareContext);\r\n  const [data, setdata] = useState(\"\");\r\n  const [countryMap, setcountryMap] = useState(preloader);\r\n  const [filter, setfilter] = useState(\"filter-green\");\r\n  const [wobble, setwobble] = useState(0);\r\n  const [isAddedToCompare, setisAddedToCompare] = useState(false);\r\n\r\n  const handleChange = (val) => {\r\n    setselected(val);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selected === \" \") {\r\n      const random = countries[Math.floor(Math.random() * 100)];\r\n      setdata(random);\r\n    }\r\n    const choice = countries.filter((item) => item.CountryCode === selected);\r\n\r\n    setdata(choice);\r\n    if (choice.length > 0) {\r\n      if (choice[0].NewDeaths / choice[0].TotalDeaths > rates.GlobalDeathRate) {\r\n        setfilter(\"filter-red\");\r\n      } else {\r\n        setfilter(\"filter-green\");\r\n      }\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    if (selected === \" \") {\r\n      const random = countries[Math.floor(Math.random() * 100)];\r\n      setdata(random);\r\n    }\r\n\r\n    const choice = countries.filter((item) => item.CountryCode === selected);\r\n\r\n    setdata(choice);\r\n    if (choice.length > 0) {\r\n      if (choice[0].NewDeaths / choice[0].TotalDeaths > rates.GlobalDeathRate) {\r\n        setfilter(\"filter-red\");\r\n      } else {\r\n        setfilter(\"filter-green\");\r\n      }\r\n    }\r\n  }, [countries]);\r\n\r\n  useEffect(() => {\r\n    const mapPath = require(\"./img/\" + selected.toLowerCase() + \"/vector.svg\")\r\n      ? require(\"./img/\" + selected.toLowerCase() + \"/vector.svg\")\r\n      : require(\"./404.png\");\r\n\r\n    if (!mapPath) {\r\n      const notFound = require(\"./404.png\");\r\n      setcountryMap(notFound);\r\n    }\r\n    setcountryMap(mapPath.default);\r\n  }, [selected]);\r\n\r\n  const compareClickHandler = () => {\r\n    setwobble(1);\r\n    compareHandler(selected);\r\n    setisAddedToCompare(true);\r\n  };\r\n\r\n  const removeClickHandler = () => {\r\n    setwobble(1);\r\n    removeFromCompare(selected);\r\n    setisAddedToCompare(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"country-card\">\r\n      <div className=\"country-image\">\r\n        <img src={countryMap} className={filter} />\r\n      </div>\r\n      <div className=\"country-name\">\r\n        <CountrySelector\r\n          defaultCountry={selected}\r\n          handleChange={handleChange}\r\n        />{\" \"}\r\n        {/* TODO props and change handler will be added */}\r\n      </div>\r\n      <div className=\"country-data\">\r\n        {data.length > 0 ? <CountryDataTable country={data} /> : null}\r\n      </div>\r\n      <div className=\"country-card-footer\">\r\n        {isAddedToCompare ? (\r\n          <div\r\n            className=\"compare-button red\"\r\n            onClick={removeClickHandler}\r\n            onAnimationEnd={() => setwobble(0)}\r\n            wobble={wobble}\r\n          >\r\n            {\" \"}\r\n            Remove{\" \"}\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"compare-button\"\r\n            onClick={compareClickHandler}\r\n            onAnimationEnd={() => setwobble(0)}\r\n            wobble={wobble}\r\n          >\r\n            Add to Compare\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\CountrySelector.jsx",["97"],"import React, { useState, useContext } from \"react\";\r\nimport { CountryContext } from \"../App\";\r\n\r\nexport default function CountrySelector({ handleChange, defaultCountry }) {\r\n  const [countries] = useContext(CountryContext);\r\n\r\n  return (\r\n    <select\r\n      className=\"country-selector\"\r\n      type=\"select\"\r\n      placeholder=\"Country Name Here\"\r\n      value={\r\n        defaultCountry === \" \"\r\n          ? countries[Math.floor(Math.random() * 100)][\"Country\"]\r\n          : defaultCountry\r\n      }\r\n      onChange={(e) => handleChange(e.target.value)}\r\n    >\r\n      {countries.map((item) => (\r\n        <option key={item.Country} value={item.CountryCode}>\r\n          {item.Country}\r\n        </option>\r\n      ))}\r\n\r\n      {/* <option value=\"Germany\">Germany</option>\r\n      <option value=\"Turkey\">Turkey</option>\r\n      <option value=\"USA\">USA</option>\r\n      <option value=\"France\">France</option> */}\r\n    </select>\r\n  );\r\n}\r\n","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\GlobalData.jsx",[],"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\tools\\useWindowDimensions.js",["98","99"],"import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\CountryDataTable.jsx",[],"C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\pages\\Compare.jsx",["100"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { CountryContext, GlobalRate } from \"../App\";\r\nimport CompareCountries from \"../components/CompareCountries\";\r\n\r\nexport default function Compare(props) {\r\n  const [countries] = useContext(CountryContext);\r\n  const [selection, setselection] = useState([]);\r\n  const [rates] = useContext(GlobalRate);\r\n\r\n  useEffect(() => {\r\n    let tempArr = [];\r\n    const firstToCompare = countries.filter(\r\n      (item) => item.CountryCode === props.country\r\n    );\r\n    const secondToCompare = countries.filter(\r\n      (item) => item.CountryCode === props.country2\r\n    );\r\n    tempArr = [...firstToCompare, ...secondToCompare];\r\n    setselection(tempArr);\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <CompareCountries countryArr={selection} global={rates} isDetail={true} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\JUVENTUS\\Node\\ReactJSProjects\\coviddisplay\\src\\components\\CompareCountries.jsx",["101","102","103","104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":17,"column":10,"nodeType":"112","messageId":"113","endLine":17,"endColumn":14},{"ruleId":"110","severity":1,"message":"114","line":17,"column":16,"nodeType":"112","messageId":"113","endLine":17,"endColumn":23},{"ruleId":"110","severity":1,"message":"115","line":20,"column":10,"nodeType":"112","messageId":"113","endLine":20,"endColumn":17},{"ruleId":"110","severity":1,"message":"116","line":21,"column":10,"nodeType":"112","messageId":"113","endLine":21,"endColumn":26},{"ruleId":"110","severity":1,"message":"117","line":21,"column":28,"nodeType":"112","messageId":"113","endLine":21,"endColumn":47},{"ruleId":"110","severity":1,"message":"118","line":22,"column":10,"nodeType":"112","messageId":"113","endLine":22,"endColumn":27},{"ruleId":"110","severity":1,"message":"119","line":22,"column":29,"nodeType":"112","messageId":"113","endLine":22,"endColumn":49},{"ruleId":"110","severity":1,"message":"120","line":25,"column":10,"nodeType":"112","messageId":"113","endLine":25,"endColumn":17},{"ruleId":"110","severity":1,"message":"121","line":25,"column":19,"nodeType":"112","messageId":"113","endLine":25,"endColumn":29},{"ruleId":"110","severity":1,"message":"122","line":26,"column":10,"nodeType":"112","messageId":"113","endLine":26,"endColumn":25},{"ruleId":"110","severity":1,"message":"123","line":26,"column":27,"nodeType":"112","messageId":"113","endLine":26,"endColumn":45},{"ruleId":"110","severity":1,"message":"124","line":27,"column":10,"nodeType":"112","messageId":"113","endLine":27,"endColumn":24},{"ruleId":"110","severity":1,"message":"125","line":27,"column":26,"nodeType":"112","messageId":"113","endLine":27,"endColumn":43},{"ruleId":"110","severity":1,"message":"126","line":32,"column":10,"nodeType":"112","messageId":"113","endLine":32,"endColumn":20},{"ruleId":"110","severity":1,"message":"127","line":38,"column":9,"nodeType":"112","messageId":"113","endLine":38,"endColumn":17},{"ruleId":"110","severity":1,"message":"128","line":1,"column":39,"nodeType":"112","messageId":"113","endLine":1,"endColumn":50},{"ruleId":"110","severity":1,"message":"129","line":14,"column":26,"nodeType":"112","messageId":"113","endLine":14,"endColumn":43},{"ruleId":"110","severity":1,"message":"130","line":16,"column":10,"nodeType":"112","messageId":"113","endLine":16,"endColumn":15},{"ruleId":"110","severity":1,"message":"131","line":16,"column":17,"nodeType":"112","messageId":"113","endLine":16,"endColumn":25},{"ruleId":"110","severity":1,"message":"118","line":18,"column":10,"nodeType":"112","messageId":"113","endLine":18,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":19,"column":10,"nodeType":"112","messageId":"113","endLine":19,"endColumn":14},{"ruleId":"110","severity":1,"message":"120","line":22,"column":10,"nodeType":"112","messageId":"113","endLine":22,"endColumn":17},{"ruleId":"110","severity":1,"message":"132","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":39,"column":6,"nodeType":"135","endLine":39,"endColumn":16,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":57,"column":6,"nodeType":"135","endLine":57,"endColumn":17,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":86,"column":9,"nodeType":"141","endLine":86,"endColumn":52},{"ruleId":"110","severity":1,"message":"142","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"143","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"144","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"133","severity":1,"message":"145","line":20,"column":6,"nodeType":"135","endLine":20,"endColumn":13,"suggestions":"146"},{"ruleId":"110","severity":1,"message":"147","line":9,"column":9,"nodeType":"112","messageId":"113","endLine":9,"endColumn":22},{"ruleId":"110","severity":1,"message":"148","line":14,"column":10,"nodeType":"112","messageId":"113","endLine":14,"endColumn":16},{"ruleId":"110","severity":1,"message":"149","line":14,"column":18,"nodeType":"112","messageId":"113","endLine":14,"endColumn":27},{"ruleId":"139","severity":1,"message":"140","line":28,"column":11,"nodeType":"141","endLine":28,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":33,"column":11,"nodeType":"141","endLine":33,"endColumn":31},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'lang' is assigned a value but never used.","Identifier","unusedVar","'setlang' is assigned a value but never used.","'loading' is assigned a value but never used.","'isRelatedLoading' is assigned a value but never used.","'setisRelatedLoading' is assigned a value but never used.","'isSelectedLoading' is assigned a value but never used.","'setisSelectedLoading' is assigned a value but never used.","'details' is assigned a value but never used.","'setdetails' is assigned a value but never used.","'selectedCountry' is assigned a value but never used.","'setselectedCountry' is assigned a value but never used.","'relatedCountry' is assigned a value but never used.","'setrelatedCountry' is assigned a value but never used.","'globalData' is assigned a value but never used.","'language' is assigned a value but never used.","'useCallback' is defined but never used.","'setAvailableSpace' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'countryNamer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'countries' and 'rates.GlobalDeathRate'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has missing dependencies: 'rates.GlobalDeathRate' and 'selected'. Either include them or remove the dependency array.",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'React' is defined but never used.","'ReactDOM' is defined but never used.","React Hook useEffect has a missing dependency: 'countries'. Either include it or remove the dependency array.",["154"],"'initialValues' is assigned a value but never used.","'global' is assigned a value but never used.","'setglobal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [countries, rates.GlobalDeathRate, selected]",{"range":"160","text":"161"},{"range":"162","text":"161"},"Update the dependencies array to be: [countries, props]",{"range":"163","text":"164"},[1458,1468],"[countries, rates.GlobalDeathRate, selected]",[1945,1956],[721,728],"[countries, props]"]